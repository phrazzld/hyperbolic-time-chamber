# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## User settings
xcuserdata/

## compatibility with Xcode 8 and earlier (ignoring not required starting Xcode 9)
*.xcscmblueprint
*.xccheckout

## compatibility with Xcode 3 and earlier (ignoring not required starting Xcode 4)
build/
DerivedData/
*.moved-aside
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3

## Obj-C/Swift specific
*.hmap

## App packaging
*.ipa
*.dSYM.zip
*.dSYM

## Playgrounds
timeline.xctimeline
playground.xcworkspace

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
# Package.resolved
# *.xcodeproj
#
# Xcode automatically generates this directory with a .xcworkspacedata file and xcuserdata
# hence it is not needed unless you have added a package configuration file to your project
# .swiftpm

.build/

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# Pods/
#
# Add this line if you want to avoid checking in source code from the Xcode workspace
# *.xcworkspace

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

Carthage/Build/

# Accio dependency management
Dependencies/
.accio/

# fastlane
#
# It is recommended to not store the screenshots in the git repo.
# Instead, use fastlane to re-generate the screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots/**/*.png
fastlane/test_output

# Code Injection
#
# After new code Injection tools there's a generated folder /iOSInjectionProject
# https://github.com/johnno1962/injectionforxcode

iOSInjectionProject/

# macOS
.DS_Store

# IDE
.vscode/
.idea/

# Logs
*.log
xcode.log
xcodebuild.log

# Temporary files
.tmp/
*.tmp
*.swp
*~

# Build artifacts from our custom script
build/

# Keep the old SPM build directory for reference
# (commented out since we're using Xcode project now)
# .swiftpm/

# Test coverage reports (generated by scripts/generate-coverage.sh)
coverage/
complexity/
spelling/
security/
release-notes/

# Generated documentation (keep organized docs but ignore generated ones)
docs/html/
docs/symbol-graph.json
docs/archive/

# Deployment configuration and sensitive files
.env.deployment
fastlane/logs/
build/fastlane/
*.app.dSYM.zip

# Certificates and provisioning profiles (keep these secure)
*.p12
*.mobileprovision
*.cer
*.p8

# Fastlane match certificate storage
fastlane/certs/

# Fastlane generated UI test helper (will be regenerated)
Tests/**/SnapshotHelper.swift

# Swift code coverage files
*.profraw
*.profdata

# Test result cache (local development optimization)
.test-cache/

# CI performance benchmarks (dynamic performance data)
.benchmarks/

# Test results and validation artifacts
.test-results/
